/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module DIG_D_FF_AS_1bit
#(
    parameter Default = 0
)
(
   input Set,
   input D,
   input C,
   input Clr,
   output Q,
   output \~Q
);
    reg state;

    assign Q = state;
    assign \~Q  = ~state;

    always @ (posedge C or posedge Clr or posedge Set)
    begin
        if (Set)
            state <= 1'b1;
        else if (Clr)
            state <= 'h0;
        else
            state <= D;
    end

    initial begin
        state = Default;
    end
endmodule

module controller (
  input rst,
  input zero,
  input clk,
  input beginn,
  input reset,
  input endd,
  output load,
  output start,
  output countdown
);
  wire load_temp;
  wire countdown_temp;
  wire s0;
  wire s1;
  assign load_temp = (~ rst | reset);
  assign s1 = (load_temp | zero);
  assign start = (beginn | countdown_temp);
  assign countdown_temp = (s0 & endd);
  DIG_D_FF_AS_1bit #(
    .Default(0)
  )
  DIG_D_FF_AS_1bit_i0 (
    .Set( beginn ),
    .D( s0 ),
    .C( clk ),
    .Clr( s1 ),
    .Q( s0 )
  );
  assign load = load_temp;
  assign countdown = countdown_temp;
endmodule
